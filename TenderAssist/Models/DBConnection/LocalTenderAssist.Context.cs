//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TenderAssist.Models.DBConnection
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LocalTenderAssistEntities : DbContext
    {
        public LocalTenderAssistEntities()
            : base("name=LocalTenderAssistEntities")
        {
            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 300;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tabClientDetail> tabClientDetails { get; set; }
        public virtual DbSet<tabClientEmailHistory> tabClientEmailHistories { get; set; }
        public virtual DbSet<tabClientPermission> tabClientPermissions { get; set; }
        public virtual DbSet<tabClientPermissionWithAgency> tabClientPermissionWithAgencies { get; set; }
        public virtual DbSet<tabClientPermissionWithIndSubIndustry> tabClientPermissionWithIndSubIndustries { get; set; }
        public virtual DbSet<tabClientPermissionWithLocation> tabClientPermissionWithLocations { get; set; }
        public virtual DbSet<tabClientPermissionWithOwnership> tabClientPermissionWithOwnerships { get; set; }
        public virtual DbSet<tabClientPermissionWithProduct> tabClientPermissionWithProducts { get; set; }
        public virtual DbSet<tabClientPermissionWithSector> tabClientPermissionWithSectors { get; set; }
        public virtual DbSet<tabEmpDetail> tabEmpDetails { get; set; }
        public virtual DbSet<tabEmpEmailId> tabEmpEmailIds { get; set; }
    
        public virtual ObjectResult<Proc_TA_ClientSampleTender_Count_Result> Proc_TA_ClientSampleTender_Count(Nullable<int> permissionId, Nullable<int> start, Nullable<int> limit, string tenderStatusFlag, ObjectParameter ownershipID, ObjectParameter ownershipIDNotUsedIn, ObjectParameter sectorID, ObjectParameter sectorIDNotUsedIn, ObjectParameter agencyID, ObjectParameter agencyIDNotUsedIn, ObjectParameter indSub, ObjectParameter indSubNotUsedIn, ObjectParameter loc, ObjectParameter locNotUsedIn, ObjectParameter keyword1, ObjectParameter keyword2, ObjectParameter keyword3, ObjectParameter otherKeywords, ObjectParameter notUsedKeywords, ObjectParameter documentType, ObjectParameter isICBNCB, ObjectParameter bitTenderAmount, ObjectParameter tenderValueFrom, ObjectParameter tenderValueTo, ObjectParameter indianGlobal, ObjectParameter finalSearchText, string tenderYear, string orderBys, string ascDesc)
        {
            var permissionIdParameter = permissionId.HasValue ?
                new ObjectParameter("PermissionId", permissionId) :
                new ObjectParameter("PermissionId", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var tenderStatusFlagParameter = tenderStatusFlag != null ?
                new ObjectParameter("TenderStatusFlag", tenderStatusFlag) :
                new ObjectParameter("TenderStatusFlag", typeof(string));
    
            var tenderYearParameter = tenderYear != null ?
                new ObjectParameter("TenderYear", tenderYear) :
                new ObjectParameter("TenderYear", typeof(string));
    
            var orderBysParameter = orderBys != null ?
                new ObjectParameter("OrderBys", orderBys) :
                new ObjectParameter("OrderBys", typeof(string));
    
            var ascDescParameter = ascDesc != null ?
                new ObjectParameter("AscDesc", ascDesc) :
                new ObjectParameter("AscDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_TA_ClientSampleTender_Count_Result>("Proc_TA_ClientSampleTender_Count", permissionIdParameter, startParameter, limitParameter, tenderStatusFlagParameter, ownershipID, ownershipIDNotUsedIn, sectorID, sectorIDNotUsedIn, agencyID, agencyIDNotUsedIn, indSub, indSubNotUsedIn, loc, locNotUsedIn, keyword1, keyword2, keyword3, otherKeywords, notUsedKeywords, documentType, isICBNCB, bitTenderAmount, tenderValueFrom, tenderValueTo, indianGlobal, finalSearchText, tenderYearParameter, orderBysParameter, ascDescParameter);
        }
    
        public virtual ObjectResult<Proc_TA_ClientSampleTender_List_Result> Proc_TA_ClientSampleTender_List(Nullable<int> permissionId, Nullable<int> start, Nullable<int> limit, string tenderStatusFlag, ObjectParameter ownershipID, ObjectParameter ownershipIDNotUsedIn, ObjectParameter sectorID, ObjectParameter sectorIDNotUsedIn, ObjectParameter agencyID, ObjectParameter agencyIDNotUsedIn, ObjectParameter indSub, ObjectParameter indSubNotUsedIn, ObjectParameter loc, ObjectParameter locNotUsedIn, ObjectParameter keyword1, ObjectParameter keyword2, ObjectParameter keyword3, ObjectParameter otherKeywords, ObjectParameter notUsedKeywords, ObjectParameter documentType, ObjectParameter isICBNCB, ObjectParameter bitTenderAmount, ObjectParameter tenderValueFrom, ObjectParameter tenderValueTo, ObjectParameter indianGlobal, ObjectParameter finalSearchText, string tenderYear, string orderBys, string ascDesc)
        {
            var permissionIdParameter = permissionId.HasValue ?
                new ObjectParameter("PermissionId", permissionId) :
                new ObjectParameter("PermissionId", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var tenderStatusFlagParameter = tenderStatusFlag != null ?
                new ObjectParameter("TenderStatusFlag", tenderStatusFlag) :
                new ObjectParameter("TenderStatusFlag", typeof(string));
    
            var tenderYearParameter = tenderYear != null ?
                new ObjectParameter("TenderYear", tenderYear) :
                new ObjectParameter("TenderYear", typeof(string));
    
            var orderBysParameter = orderBys != null ?
                new ObjectParameter("OrderBys", orderBys) :
                new ObjectParameter("OrderBys", typeof(string));
    
            var ascDescParameter = ascDesc != null ?
                new ObjectParameter("AscDesc", ascDesc) :
                new ObjectParameter("AscDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_TA_ClientSampleTender_List_Result>("Proc_TA_ClientSampleTender_List", permissionIdParameter, startParameter, limitParameter, tenderStatusFlagParameter, ownershipID, ownershipIDNotUsedIn, sectorID, sectorIDNotUsedIn, agencyID, agencyIDNotUsedIn, indSub, indSubNotUsedIn, loc, locNotUsedIn, keyword1, keyword2, keyword3, otherKeywords, notUsedKeywords, documentType, isICBNCB, bitTenderAmount, tenderValueFrom, tenderValueTo, indianGlobal, finalSearchText, tenderYearParameter, orderBysParameter, ascDescParameter);
        }
    
        public virtual int Proc_Site_I_SendSampleTenders(Nullable<int> intClientId)
        {
            var intClientIdParameter = intClientId.HasValue ?
                new ObjectParameter("intClientId", intClientId) :
                new ObjectParameter("intClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Proc_Site_I_SendSampleTenders", intClientIdParameter);
        }
    }
}
