//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TenderAssist.Models.DBConnection
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TenderAssistEntities : DbContext
    {
        public TenderAssistEntities()
            : base("name=TenderAssistEntities")
        {
            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 300;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbAgencyIndian> tbAgencyIndians { get; set; }
        public virtual DbSet<tbCountry> tbCountries { get; set; }
        public virtual DbSet<tbDocumentType> tbDocumentTypes { get; set; }
        public virtual DbSet<tbIndustry> tbIndustries { get; set; }
        public virtual DbSet<tbLocation> tbLocations { get; set; }
        public virtual DbSet<tbOwnership> tbOwnerships { get; set; }
        public virtual DbSet<tbProduct> tbProducts { get; set; }
        public virtual DbSet<tbReference> tbReferences { get; set; }
        public virtual DbSet<tbSector> tbSectors { get; set; }
        public virtual DbSet<tbState> tbStates { get; set; }
        public virtual DbSet<tbSubIndustry> tbSubIndustries { get; set; }
        public virtual DbSet<TenderInfo_Indian> TenderInfo_Indian { get; set; }
        public virtual DbSet<TenderInfo_Indian_Active> TenderInfo_Indian_Active { get; set; }
        public virtual DbSet<TenderClassified> TenderClassifieds { get; set; }
        public virtual DbSet<TenderDocFile> TenderDocFiles { get; set; }
        public virtual DbSet<tabClientDetail> tabClientDetails { get; set; }
        public virtual DbSet<tabClientDuration> tabClientDurations { get; set; }
        public virtual DbSet<tabClientPermission> tabClientPermissions { get; set; }
        public virtual DbSet<tabClientPermissionWithAgency> tabClientPermissionWithAgencies { get; set; }
        public virtual DbSet<tabClientPermissionWithIndSubIndustry> tabClientPermissionWithIndSubIndustries { get; set; }
        public virtual DbSet<tabClientPermissionWithLocation> tabClientPermissionWithLocations { get; set; }
        public virtual DbSet<tabClientPermissionWithOwnership> tabClientPermissionWithOwnerships { get; set; }
        public virtual DbSet<tabClientPermissionWithProduct> tabClientPermissionWithProducts { get; set; }
        public virtual DbSet<tabClientPermissionWithSector> tabClientPermissionWithSectors { get; set; }
        public virtual DbSet<tabClientFavouriteTender> tabClientFavouriteTenders { get; set; }
        public virtual DbSet<tbInquiryRegForm> tbInquiryRegForms { get; set; }
        public virtual DbSet<tbRegion> tbRegions { get; set; }
        public virtual DbSet<TenderInfo_Global> TenderInfo_Global { get; set; }
        public virtual DbSet<TenderInfo_Global_Active> TenderInfo_Global_Active { get; set; }
        public virtual DbSet<tbCountryRegionAssocation> tbCountryRegionAssocations { get; set; }
    
        [DbFunction("TenderAssistEntities", "fnSplitString")]
        public virtual IQueryable<fnSplitString_Result> fnSplitString(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSplitString_Result>("[TenderAssistEntities].[fnSplitString](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        [DbFunction("TenderAssistEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[TenderAssistEntities].[Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<Proc_Site_SearchProductsNameAsKeyWord_Result> Proc_Site_SearchProductsNameAsKeyWord(string keywordName)
        {
            var keywordNameParameter = keywordName != null ?
                new ObjectParameter("KeywordName", keywordName) :
                new ObjectParameter("KeywordName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Site_SearchProductsNameAsKeyWord_Result>("Proc_Site_SearchProductsNameAsKeyWord", keywordNameParameter);
        }
    
        public virtual ObjectResult<Proc_TA_SearchIndianTenderCount_Result> Proc_TA_SearchIndianTenderCount(Nullable<int> tenderBy, Nullable<int> searchType, string searchText, string productIds, string locationIds, string indSubIndIds, string agencyIds, string sectorIds, string ownershipIds, string refIds, Nullable<int> tenderStatusFlag, Nullable<int> start, Nullable<int> limit, Nullable<bool> searchWithCount, string tenderYear, Nullable<int> tenderType, Nullable<int> tenderValueType, Nullable<System.DateTime> subDateFrom, Nullable<System.DateTime> subDateTo, Nullable<System.DateTime> opDateFrom, Nullable<System.DateTime> opDateTo, Nullable<int> ourRefNo, Nullable<bool> iCBNCB, string otherSearchText, string withinSearchText)
        {
            var tenderByParameter = tenderBy.HasValue ?
                new ObjectParameter("TenderBy", tenderBy) :
                new ObjectParameter("TenderBy", typeof(int));
    
            var searchTypeParameter = searchType.HasValue ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var productIdsParameter = productIds != null ?
                new ObjectParameter("ProductIds", productIds) :
                new ObjectParameter("ProductIds", typeof(string));
    
            var locationIdsParameter = locationIds != null ?
                new ObjectParameter("LocationIds", locationIds) :
                new ObjectParameter("LocationIds", typeof(string));
    
            var indSubIndIdsParameter = indSubIndIds != null ?
                new ObjectParameter("IndSubIndIds", indSubIndIds) :
                new ObjectParameter("IndSubIndIds", typeof(string));
    
            var agencyIdsParameter = agencyIds != null ?
                new ObjectParameter("AgencyIds", agencyIds) :
                new ObjectParameter("AgencyIds", typeof(string));
    
            var sectorIdsParameter = sectorIds != null ?
                new ObjectParameter("SectorIds", sectorIds) :
                new ObjectParameter("SectorIds", typeof(string));
    
            var ownershipIdsParameter = ownershipIds != null ?
                new ObjectParameter("OwnershipIds", ownershipIds) :
                new ObjectParameter("OwnershipIds", typeof(string));
    
            var refIdsParameter = refIds != null ?
                new ObjectParameter("RefIds", refIds) :
                new ObjectParameter("RefIds", typeof(string));
    
            var tenderStatusFlagParameter = tenderStatusFlag.HasValue ?
                new ObjectParameter("TenderStatusFlag", tenderStatusFlag) :
                new ObjectParameter("TenderStatusFlag", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var searchWithCountParameter = searchWithCount.HasValue ?
                new ObjectParameter("SearchWithCount", searchWithCount) :
                new ObjectParameter("SearchWithCount", typeof(bool));
    
            var tenderYearParameter = tenderYear != null ?
                new ObjectParameter("TenderYear", tenderYear) :
                new ObjectParameter("TenderYear", typeof(string));
    
            var tenderTypeParameter = tenderType.HasValue ?
                new ObjectParameter("TenderType", tenderType) :
                new ObjectParameter("TenderType", typeof(int));
    
            var tenderValueTypeParameter = tenderValueType.HasValue ?
                new ObjectParameter("TenderValueType", tenderValueType) :
                new ObjectParameter("TenderValueType", typeof(int));
    
            var subDateFromParameter = subDateFrom.HasValue ?
                new ObjectParameter("SubDateFrom", subDateFrom) :
                new ObjectParameter("SubDateFrom", typeof(System.DateTime));
    
            var subDateToParameter = subDateTo.HasValue ?
                new ObjectParameter("SubDateTo", subDateTo) :
                new ObjectParameter("SubDateTo", typeof(System.DateTime));
    
            var opDateFromParameter = opDateFrom.HasValue ?
                new ObjectParameter("OpDateFrom", opDateFrom) :
                new ObjectParameter("OpDateFrom", typeof(System.DateTime));
    
            var opDateToParameter = opDateTo.HasValue ?
                new ObjectParameter("OpDateTo", opDateTo) :
                new ObjectParameter("OpDateTo", typeof(System.DateTime));
    
            var ourRefNoParameter = ourRefNo.HasValue ?
                new ObjectParameter("OurRefNo", ourRefNo) :
                new ObjectParameter("OurRefNo", typeof(int));
    
            var iCBNCBParameter = iCBNCB.HasValue ?
                new ObjectParameter("ICBNCB", iCBNCB) :
                new ObjectParameter("ICBNCB", typeof(bool));
    
            var otherSearchTextParameter = otherSearchText != null ?
                new ObjectParameter("OtherSearchText", otherSearchText) :
                new ObjectParameter("OtherSearchText", typeof(string));
    
            var withinSearchTextParameter = withinSearchText != null ?
                new ObjectParameter("WithinSearchText", withinSearchText) :
                new ObjectParameter("WithinSearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_TA_SearchIndianTenderCount_Result>("Proc_TA_SearchIndianTenderCount", tenderByParameter, searchTypeParameter, searchTextParameter, productIdsParameter, locationIdsParameter, indSubIndIdsParameter, agencyIdsParameter, sectorIdsParameter, ownershipIdsParameter, refIdsParameter, tenderStatusFlagParameter, startParameter, limitParameter, searchWithCountParameter, tenderYearParameter, tenderTypeParameter, tenderValueTypeParameter, subDateFromParameter, subDateToParameter, opDateFromParameter, opDateToParameter, ourRefNoParameter, iCBNCBParameter, otherSearchTextParameter, withinSearchTextParameter);
        }
    
        public virtual ObjectResult<Proc_TA_SearchIndianTenderList_Result> Proc_TA_SearchIndianTenderList(Nullable<int> tenderBy, Nullable<int> searchType, string searchText, string productIds, string locationIds, string indSubIndIds, string agencyIds, string sectorIds, string ownershipIds, string refIds, Nullable<int> tenderStatusFlag, Nullable<int> start, Nullable<int> limit, Nullable<bool> searchWithCount, string tenderYear, Nullable<int> tenderType, Nullable<int> tenderValueType, Nullable<System.DateTime> subDateFrom, Nullable<System.DateTime> subDateTo, Nullable<System.DateTime> opDateFrom, Nullable<System.DateTime> opDateTo, Nullable<int> ourRefNo, Nullable<bool> iCBNCB, string otherSearchText, string withinSearchText, Nullable<int> orderByType)
        {
            var tenderByParameter = tenderBy.HasValue ?
                new ObjectParameter("TenderBy", tenderBy) :
                new ObjectParameter("TenderBy", typeof(int));
    
            var searchTypeParameter = searchType.HasValue ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var productIdsParameter = productIds != null ?
                new ObjectParameter("ProductIds", productIds) :
                new ObjectParameter("ProductIds", typeof(string));
    
            var locationIdsParameter = locationIds != null ?
                new ObjectParameter("LocationIds", locationIds) :
                new ObjectParameter("LocationIds", typeof(string));
    
            var indSubIndIdsParameter = indSubIndIds != null ?
                new ObjectParameter("IndSubIndIds", indSubIndIds) :
                new ObjectParameter("IndSubIndIds", typeof(string));
    
            var agencyIdsParameter = agencyIds != null ?
                new ObjectParameter("AgencyIds", agencyIds) :
                new ObjectParameter("AgencyIds", typeof(string));
    
            var sectorIdsParameter = sectorIds != null ?
                new ObjectParameter("SectorIds", sectorIds) :
                new ObjectParameter("SectorIds", typeof(string));
    
            var ownershipIdsParameter = ownershipIds != null ?
                new ObjectParameter("OwnershipIds", ownershipIds) :
                new ObjectParameter("OwnershipIds", typeof(string));
    
            var refIdsParameter = refIds != null ?
                new ObjectParameter("RefIds", refIds) :
                new ObjectParameter("RefIds", typeof(string));
    
            var tenderStatusFlagParameter = tenderStatusFlag.HasValue ?
                new ObjectParameter("TenderStatusFlag", tenderStatusFlag) :
                new ObjectParameter("TenderStatusFlag", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var searchWithCountParameter = searchWithCount.HasValue ?
                new ObjectParameter("SearchWithCount", searchWithCount) :
                new ObjectParameter("SearchWithCount", typeof(bool));
    
            var tenderYearParameter = tenderYear != null ?
                new ObjectParameter("TenderYear", tenderYear) :
                new ObjectParameter("TenderYear", typeof(string));
    
            var tenderTypeParameter = tenderType.HasValue ?
                new ObjectParameter("TenderType", tenderType) :
                new ObjectParameter("TenderType", typeof(int));
    
            var tenderValueTypeParameter = tenderValueType.HasValue ?
                new ObjectParameter("TenderValueType", tenderValueType) :
                new ObjectParameter("TenderValueType", typeof(int));
    
            var subDateFromParameter = subDateFrom.HasValue ?
                new ObjectParameter("SubDateFrom", subDateFrom) :
                new ObjectParameter("SubDateFrom", typeof(System.DateTime));
    
            var subDateToParameter = subDateTo.HasValue ?
                new ObjectParameter("SubDateTo", subDateTo) :
                new ObjectParameter("SubDateTo", typeof(System.DateTime));
    
            var opDateFromParameter = opDateFrom.HasValue ?
                new ObjectParameter("OpDateFrom", opDateFrom) :
                new ObjectParameter("OpDateFrom", typeof(System.DateTime));
    
            var opDateToParameter = opDateTo.HasValue ?
                new ObjectParameter("OpDateTo", opDateTo) :
                new ObjectParameter("OpDateTo", typeof(System.DateTime));
    
            var ourRefNoParameter = ourRefNo.HasValue ?
                new ObjectParameter("OurRefNo", ourRefNo) :
                new ObjectParameter("OurRefNo", typeof(int));
    
            var iCBNCBParameter = iCBNCB.HasValue ?
                new ObjectParameter("ICBNCB", iCBNCB) :
                new ObjectParameter("ICBNCB", typeof(bool));
    
            var otherSearchTextParameter = otherSearchText != null ?
                new ObjectParameter("OtherSearchText", otherSearchText) :
                new ObjectParameter("OtherSearchText", typeof(string));
    
            var withinSearchTextParameter = withinSearchText != null ?
                new ObjectParameter("WithinSearchText", withinSearchText) :
                new ObjectParameter("WithinSearchText", typeof(string));
    
            var orderByTypeParameter = orderByType.HasValue ?
                new ObjectParameter("OrderByType", orderByType) :
                new ObjectParameter("OrderByType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_TA_SearchIndianTenderList_Result>("Proc_TA_SearchIndianTenderList", tenderByParameter, searchTypeParameter, searchTextParameter, productIdsParameter, locationIdsParameter, indSubIndIdsParameter, agencyIdsParameter, sectorIdsParameter, ownershipIdsParameter, refIdsParameter, tenderStatusFlagParameter, startParameter, limitParameter, searchWithCountParameter, tenderYearParameter, tenderTypeParameter, tenderValueTypeParameter, subDateFromParameter, subDateToParameter, opDateFromParameter, opDateToParameter, ourRefNoParameter, iCBNCBParameter, otherSearchTextParameter, withinSearchTextParameter, orderByTypeParameter);
        }
    
        public virtual ObjectResult<Proc_GetTenderInformationById_Result> Proc_GetTenderInformationById(Nullable<int> ourRefno, string tenderYear)
        {
            var ourRefnoParameter = ourRefno.HasValue ?
                new ObjectParameter("OurRefno", ourRefno) :
                new ObjectParameter("OurRefno", typeof(int));
    
            var tenderYearParameter = tenderYear != null ?
                new ObjectParameter("TenderYear", tenderYear) :
                new ObjectParameter("TenderYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_GetTenderInformationById_Result>("Proc_GetTenderInformationById", ourRefnoParameter, tenderYearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Proc_Site_TBInquiryRegForm_Add(Nullable<int> inquiryTypeID, string name, string designation, string compName, string address, Nullable<int> country, Nullable<int> state, Nullable<int> city, string mobNo, string phoneNo, string interestedTenders, string website, Nullable<int> intClientPurpose, string emailID, Nullable<int> ourRefNo, Nullable<int> newID, Nullable<int> flag, Nullable<int> moduleType, Nullable<int> linkId, string browserLink, string formTitle, string clientIPAddress, string clientMACAddress)
        {
            var inquiryTypeIDParameter = inquiryTypeID.HasValue ?
                new ObjectParameter("InquiryTypeID", inquiryTypeID) :
                new ObjectParameter("InquiryTypeID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var compNameParameter = compName != null ?
                new ObjectParameter("CompName", compName) :
                new ObjectParameter("CompName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryParameter = country.HasValue ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(int));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(int));
    
            var cityParameter = city.HasValue ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(int));
    
            var mobNoParameter = mobNo != null ?
                new ObjectParameter("MobNo", mobNo) :
                new ObjectParameter("MobNo", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var interestedTendersParameter = interestedTenders != null ?
                new ObjectParameter("InterestedTenders", interestedTenders) :
                new ObjectParameter("InterestedTenders", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var intClientPurposeParameter = intClientPurpose.HasValue ?
                new ObjectParameter("intClientPurpose", intClientPurpose) :
                new ObjectParameter("intClientPurpose", typeof(int));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var ourRefNoParameter = ourRefNo.HasValue ?
                new ObjectParameter("OurRefNo", ourRefNo) :
                new ObjectParameter("OurRefNo", typeof(int));
    
            var newIDParameter = newID.HasValue ?
                new ObjectParameter("NewID", newID) :
                new ObjectParameter("NewID", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            var moduleTypeParameter = moduleType.HasValue ?
                new ObjectParameter("ModuleType", moduleType) :
                new ObjectParameter("ModuleType", typeof(int));
    
            var linkIdParameter = linkId.HasValue ?
                new ObjectParameter("LinkId", linkId) :
                new ObjectParameter("LinkId", typeof(int));
    
            var browserLinkParameter = browserLink != null ?
                new ObjectParameter("BrowserLink", browserLink) :
                new ObjectParameter("BrowserLink", typeof(string));
    
            var formTitleParameter = formTitle != null ?
                new ObjectParameter("FormTitle", formTitle) :
                new ObjectParameter("FormTitle", typeof(string));
    
            var clientIPAddressParameter = clientIPAddress != null ?
                new ObjectParameter("ClientIPAddress", clientIPAddress) :
                new ObjectParameter("ClientIPAddress", typeof(string));
    
            var clientMACAddressParameter = clientMACAddress != null ?
                new ObjectParameter("ClientMACAddress", clientMACAddress) :
                new ObjectParameter("ClientMACAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Proc_Site_TBInquiryRegForm_Add", inquiryTypeIDParameter, nameParameter, designationParameter, compNameParameter, addressParameter, countryParameter, stateParameter, cityParameter, mobNoParameter, phoneNoParameter, interestedTendersParameter, websiteParameter, intClientPurposeParameter, emailIDParameter, ourRefNoParameter, newIDParameter, flagParameter, moduleTypeParameter, linkIdParameter, browserLinkParameter, formTitleParameter, clientIPAddressParameter, clientMACAddressParameter);
        }
    
        public virtual ObjectResult<Proc_TA_ClientTenderCount_Result> Proc_TA_ClientTenderCount(Nullable<int> permissionId, Nullable<int> start, Nullable<int> limit, string tenderStatusFlag, Nullable<System.DateTime> enterDate, string searchText, Nullable<int> ourRefNo, string ownershipID, string sectorID, string agencyID, string indSub, string loc, string searchKeyword1, string searchKeyword2, string searchKeyword3, string searchOtherKeywords, string notUsedKeywords, string documentType, string isICBNCB, string bitTenderAmount, Nullable<decimal> searchTenderValueFrom, Nullable<decimal> searchTenderValueTo, Nullable<bool> indianGlobal, string withinSearchText, Nullable<System.DateTime> subDateFrom, Nullable<System.DateTime> subDateTo, Nullable<System.DateTime> opDateFrom, Nullable<System.DateTime> opDateTo, string globalCountryIds)
        {
            var permissionIdParameter = permissionId.HasValue ?
                new ObjectParameter("PermissionId", permissionId) :
                new ObjectParameter("PermissionId", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var tenderStatusFlagParameter = tenderStatusFlag != null ?
                new ObjectParameter("TenderStatusFlag", tenderStatusFlag) :
                new ObjectParameter("TenderStatusFlag", typeof(string));
    
            var enterDateParameter = enterDate.HasValue ?
                new ObjectParameter("EnterDate", enterDate) :
                new ObjectParameter("EnterDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var ourRefNoParameter = ourRefNo.HasValue ?
                new ObjectParameter("OurRefNo", ourRefNo) :
                new ObjectParameter("OurRefNo", typeof(int));
    
            var ownershipIDParameter = ownershipID != null ?
                new ObjectParameter("OwnershipID", ownershipID) :
                new ObjectParameter("OwnershipID", typeof(string));
    
            var sectorIDParameter = sectorID != null ?
                new ObjectParameter("SectorID", sectorID) :
                new ObjectParameter("SectorID", typeof(string));
    
            var agencyIDParameter = agencyID != null ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(string));
    
            var indSubParameter = indSub != null ?
                new ObjectParameter("IndSub", indSub) :
                new ObjectParameter("IndSub", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("Loc", loc) :
                new ObjectParameter("Loc", typeof(string));
    
            var searchKeyword1Parameter = searchKeyword1 != null ?
                new ObjectParameter("SearchKeyword1", searchKeyword1) :
                new ObjectParameter("SearchKeyword1", typeof(string));
    
            var searchKeyword2Parameter = searchKeyword2 != null ?
                new ObjectParameter("SearchKeyword2", searchKeyword2) :
                new ObjectParameter("SearchKeyword2", typeof(string));
    
            var searchKeyword3Parameter = searchKeyword3 != null ?
                new ObjectParameter("SearchKeyword3", searchKeyword3) :
                new ObjectParameter("SearchKeyword3", typeof(string));
    
            var searchOtherKeywordsParameter = searchOtherKeywords != null ?
                new ObjectParameter("SearchOtherKeywords", searchOtherKeywords) :
                new ObjectParameter("SearchOtherKeywords", typeof(string));
    
            var notUsedKeywordsParameter = notUsedKeywords != null ?
                new ObjectParameter("NotUsedKeywords", notUsedKeywords) :
                new ObjectParameter("NotUsedKeywords", typeof(string));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(string));
    
            var isICBNCBParameter = isICBNCB != null ?
                new ObjectParameter("IsICBNCB", isICBNCB) :
                new ObjectParameter("IsICBNCB", typeof(string));
    
            var bitTenderAmountParameter = bitTenderAmount != null ?
                new ObjectParameter("bitTenderAmount", bitTenderAmount) :
                new ObjectParameter("bitTenderAmount", typeof(string));
    
            var searchTenderValueFromParameter = searchTenderValueFrom.HasValue ?
                new ObjectParameter("SearchTenderValueFrom", searchTenderValueFrom) :
                new ObjectParameter("SearchTenderValueFrom", typeof(decimal));
    
            var searchTenderValueToParameter = searchTenderValueTo.HasValue ?
                new ObjectParameter("SearchTenderValueTo", searchTenderValueTo) :
                new ObjectParameter("SearchTenderValueTo", typeof(decimal));
    
            var indianGlobalParameter = indianGlobal.HasValue ?
                new ObjectParameter("IndianGlobal", indianGlobal) :
                new ObjectParameter("IndianGlobal", typeof(bool));
    
            var withinSearchTextParameter = withinSearchText != null ?
                new ObjectParameter("WithinSearchText", withinSearchText) :
                new ObjectParameter("WithinSearchText", typeof(string));
    
            var subDateFromParameter = subDateFrom.HasValue ?
                new ObjectParameter("SubDateFrom", subDateFrom) :
                new ObjectParameter("SubDateFrom", typeof(System.DateTime));
    
            var subDateToParameter = subDateTo.HasValue ?
                new ObjectParameter("SubDateTo", subDateTo) :
                new ObjectParameter("SubDateTo", typeof(System.DateTime));
    
            var opDateFromParameter = opDateFrom.HasValue ?
                new ObjectParameter("OpDateFrom", opDateFrom) :
                new ObjectParameter("OpDateFrom", typeof(System.DateTime));
    
            var opDateToParameter = opDateTo.HasValue ?
                new ObjectParameter("OpDateTo", opDateTo) :
                new ObjectParameter("OpDateTo", typeof(System.DateTime));
    
            var globalCountryIdsParameter = globalCountryIds != null ?
                new ObjectParameter("GlobalCountryIds", globalCountryIds) :
                new ObjectParameter("GlobalCountryIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_TA_ClientTenderCount_Result>("Proc_TA_ClientTenderCount", permissionIdParameter, startParameter, limitParameter, tenderStatusFlagParameter, enterDateParameter, searchTextParameter, ourRefNoParameter, ownershipIDParameter, sectorIDParameter, agencyIDParameter, indSubParameter, locParameter, searchKeyword1Parameter, searchKeyword2Parameter, searchKeyword3Parameter, searchOtherKeywordsParameter, notUsedKeywordsParameter, documentTypeParameter, isICBNCBParameter, bitTenderAmountParameter, searchTenderValueFromParameter, searchTenderValueToParameter, indianGlobalParameter, withinSearchTextParameter, subDateFromParameter, subDateToParameter, opDateFromParameter, opDateToParameter, globalCountryIdsParameter);
        }
    
        public virtual ObjectResult<Proc_TA_ClientTenderList_Result> Proc_TA_ClientTenderList(Nullable<int> permissionId, Nullable<int> start, Nullable<int> limit, string tenderStatusFlag, Nullable<System.DateTime> enterDate, string searchText, Nullable<int> ourRefNo, string ownershipID, string sectorID, string agencyID, string indSub, string loc, string searchKeyword1, string searchKeyword2, string searchKeyword3, string searchOtherKeywords, string notUsedKeywords, string documentType, string isICBNCB, string bitTenderAmount, Nullable<decimal> searchTenderValueFrom, Nullable<decimal> searchTenderValueTo, Nullable<bool> indianGlobal, string withinSearchText, Nullable<System.DateTime> subDateFrom, Nullable<System.DateTime> subDateTo, Nullable<System.DateTime> opDateFrom, Nullable<System.DateTime> opDateTo, string globalCountryIds)
        {
            var permissionIdParameter = permissionId.HasValue ?
                new ObjectParameter("PermissionId", permissionId) :
                new ObjectParameter("PermissionId", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var tenderStatusFlagParameter = tenderStatusFlag != null ?
                new ObjectParameter("TenderStatusFlag", tenderStatusFlag) :
                new ObjectParameter("TenderStatusFlag", typeof(string));
    
            var enterDateParameter = enterDate.HasValue ?
                new ObjectParameter("EnterDate", enterDate) :
                new ObjectParameter("EnterDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var ourRefNoParameter = ourRefNo.HasValue ?
                new ObjectParameter("OurRefNo", ourRefNo) :
                new ObjectParameter("OurRefNo", typeof(int));
    
            var ownershipIDParameter = ownershipID != null ?
                new ObjectParameter("OwnershipID", ownershipID) :
                new ObjectParameter("OwnershipID", typeof(string));
    
            var sectorIDParameter = sectorID != null ?
                new ObjectParameter("SectorID", sectorID) :
                new ObjectParameter("SectorID", typeof(string));
    
            var agencyIDParameter = agencyID != null ?
                new ObjectParameter("AgencyID", agencyID) :
                new ObjectParameter("AgencyID", typeof(string));
    
            var indSubParameter = indSub != null ?
                new ObjectParameter("IndSub", indSub) :
                new ObjectParameter("IndSub", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("Loc", loc) :
                new ObjectParameter("Loc", typeof(string));
    
            var searchKeyword1Parameter = searchKeyword1 != null ?
                new ObjectParameter("SearchKeyword1", searchKeyword1) :
                new ObjectParameter("SearchKeyword1", typeof(string));
    
            var searchKeyword2Parameter = searchKeyword2 != null ?
                new ObjectParameter("SearchKeyword2", searchKeyword2) :
                new ObjectParameter("SearchKeyword2", typeof(string));
    
            var searchKeyword3Parameter = searchKeyword3 != null ?
                new ObjectParameter("SearchKeyword3", searchKeyword3) :
                new ObjectParameter("SearchKeyword3", typeof(string));
    
            var searchOtherKeywordsParameter = searchOtherKeywords != null ?
                new ObjectParameter("SearchOtherKeywords", searchOtherKeywords) :
                new ObjectParameter("SearchOtherKeywords", typeof(string));
    
            var notUsedKeywordsParameter = notUsedKeywords != null ?
                new ObjectParameter("NotUsedKeywords", notUsedKeywords) :
                new ObjectParameter("NotUsedKeywords", typeof(string));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(string));
    
            var isICBNCBParameter = isICBNCB != null ?
                new ObjectParameter("IsICBNCB", isICBNCB) :
                new ObjectParameter("IsICBNCB", typeof(string));
    
            var bitTenderAmountParameter = bitTenderAmount != null ?
                new ObjectParameter("bitTenderAmount", bitTenderAmount) :
                new ObjectParameter("bitTenderAmount", typeof(string));
    
            var searchTenderValueFromParameter = searchTenderValueFrom.HasValue ?
                new ObjectParameter("SearchTenderValueFrom", searchTenderValueFrom) :
                new ObjectParameter("SearchTenderValueFrom", typeof(decimal));
    
            var searchTenderValueToParameter = searchTenderValueTo.HasValue ?
                new ObjectParameter("SearchTenderValueTo", searchTenderValueTo) :
                new ObjectParameter("SearchTenderValueTo", typeof(decimal));
    
            var indianGlobalParameter = indianGlobal.HasValue ?
                new ObjectParameter("IndianGlobal", indianGlobal) :
                new ObjectParameter("IndianGlobal", typeof(bool));
    
            var withinSearchTextParameter = withinSearchText != null ?
                new ObjectParameter("WithinSearchText", withinSearchText) :
                new ObjectParameter("WithinSearchText", typeof(string));
    
            var subDateFromParameter = subDateFrom.HasValue ?
                new ObjectParameter("SubDateFrom", subDateFrom) :
                new ObjectParameter("SubDateFrom", typeof(System.DateTime));
    
            var subDateToParameter = subDateTo.HasValue ?
                new ObjectParameter("SubDateTo", subDateTo) :
                new ObjectParameter("SubDateTo", typeof(System.DateTime));
    
            var opDateFromParameter = opDateFrom.HasValue ?
                new ObjectParameter("OpDateFrom", opDateFrom) :
                new ObjectParameter("OpDateFrom", typeof(System.DateTime));
    
            var opDateToParameter = opDateTo.HasValue ?
                new ObjectParameter("OpDateTo", opDateTo) :
                new ObjectParameter("OpDateTo", typeof(System.DateTime));
    
            var globalCountryIdsParameter = globalCountryIds != null ?
                new ObjectParameter("GlobalCountryIds", globalCountryIds) :
                new ObjectParameter("GlobalCountryIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_TA_ClientTenderList_Result>("Proc_TA_ClientTenderList", permissionIdParameter, startParameter, limitParameter, tenderStatusFlagParameter, enterDateParameter, searchTextParameter, ourRefNoParameter, ownershipIDParameter, sectorIDParameter, agencyIDParameter, indSubParameter, locParameter, searchKeyword1Parameter, searchKeyword2Parameter, searchKeyword3Parameter, searchOtherKeywordsParameter, notUsedKeywordsParameter, documentTypeParameter, isICBNCBParameter, bitTenderAmountParameter, searchTenderValueFromParameter, searchTenderValueToParameter, indianGlobalParameter, withinSearchTextParameter, subDateFromParameter, subDateToParameter, opDateFromParameter, opDateToParameter, globalCountryIdsParameter);
        }
    
        public virtual ObjectResult<Proc_Site_GetTenderInfoByOurRefNo_New_Result> Proc_Site_GetTenderInfoByOurRefNo_New(string ourrefNos, Nullable<bool> type)
        {
            var ourrefNosParameter = ourrefNos != null ?
                new ObjectParameter("OurrefNos", ourrefNos) :
                new ObjectParameter("OurrefNos", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Site_GetTenderInfoByOurRefNo_New_Result>("Proc_Site_GetTenderInfoByOurRefNo_New", ourrefNosParameter, typeParameter);
        }
    
        public virtual ObjectResult<Proc_Site_GetIndustryForIndianTenders_Result> Proc_Site_GetIndustryForIndianTenders(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Site_GetIndustryForIndianTenders_Result>("Proc_Site_GetIndustryForIndianTenders", searchTextParameter);
        }
    
        public virtual ObjectResult<Proc_Site_GetOwnershipForIndianTenders_Result> Proc_Site_GetOwnershipForIndianTenders(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Site_GetOwnershipForIndianTenders_Result>("Proc_Site_GetOwnershipForIndianTenders", searchTextParameter);
        }
    
        public virtual ObjectResult<Proc_Site_GetSectorForIndianTenders_Result> Proc_Site_GetSectorForIndianTenders(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Site_GetSectorForIndianTenders_Result>("Proc_Site_GetSectorForIndianTenders", searchTextParameter);
        }
    
        public virtual ObjectResult<Proc_Site_GetStateCityForIndianTenders_Result> Proc_Site_GetStateCityForIndianTenders(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Site_GetStateCityForIndianTenders_Result>("Proc_Site_GetStateCityForIndianTenders", searchTextParameter);
        }
    
        public virtual ObjectResult<Proc_Site_GetIndustrySubIndustryList_Result> Proc_Site_GetIndustrySubIndustryList(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Site_GetIndustrySubIndustryList_Result>("Proc_Site_GetIndustrySubIndustryList", searchTextParameter);
        }
    
        public virtual ObjectResult<Proc_Site_GetOwnershipSectorAgencyForIndianTenders_Result> Proc_Site_GetOwnershipSectorAgencyForIndianTenders(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Site_GetOwnershipSectorAgencyForIndianTenders_Result>("Proc_Site_GetOwnershipSectorAgencyForIndianTenders", searchTextParameter);
        }
    
        public virtual ObjectResult<Proc_Site_GetProductForIndianTenders_Result> Proc_Site_GetProductForIndianTenders(string searchText, string startWith)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var startWithParameter = startWith != null ?
                new ObjectParameter("StartWith", startWith) :
                new ObjectParameter("StartWith", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Site_GetProductForIndianTenders_Result>("Proc_Site_GetProductForIndianTenders", searchTextParameter, startWithParameter);
        }
    
        public virtual ObjectResult<Proc_TA_SearchGlobalTenderCount_Result> Proc_TA_SearchGlobalTenderCount(Nullable<int> searchType, string searchText, string countryIds, string productIds, string agencyIds, Nullable<int> tenderType, Nullable<System.DateTime> subDateFrom, Nullable<System.DateTime> subDateTo, Nullable<System.DateTime> opDateFrom, Nullable<System.DateTime> opDateTo, Nullable<int> ourRefNo, string otherSearchText)
        {
            var searchTypeParameter = searchType.HasValue ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var countryIdsParameter = countryIds != null ?
                new ObjectParameter("CountryIds", countryIds) :
                new ObjectParameter("CountryIds", typeof(string));
    
            var productIdsParameter = productIds != null ?
                new ObjectParameter("ProductIds", productIds) :
                new ObjectParameter("ProductIds", typeof(string));
    
            var agencyIdsParameter = agencyIds != null ?
                new ObjectParameter("AgencyIds", agencyIds) :
                new ObjectParameter("AgencyIds", typeof(string));
    
            var tenderTypeParameter = tenderType.HasValue ?
                new ObjectParameter("TenderType", tenderType) :
                new ObjectParameter("TenderType", typeof(int));
    
            var subDateFromParameter = subDateFrom.HasValue ?
                new ObjectParameter("SubDateFrom", subDateFrom) :
                new ObjectParameter("SubDateFrom", typeof(System.DateTime));
    
            var subDateToParameter = subDateTo.HasValue ?
                new ObjectParameter("SubDateTo", subDateTo) :
                new ObjectParameter("SubDateTo", typeof(System.DateTime));
    
            var opDateFromParameter = opDateFrom.HasValue ?
                new ObjectParameter("OpDateFrom", opDateFrom) :
                new ObjectParameter("OpDateFrom", typeof(System.DateTime));
    
            var opDateToParameter = opDateTo.HasValue ?
                new ObjectParameter("OpDateTo", opDateTo) :
                new ObjectParameter("OpDateTo", typeof(System.DateTime));
    
            var ourRefNoParameter = ourRefNo.HasValue ?
                new ObjectParameter("OurRefNo", ourRefNo) :
                new ObjectParameter("OurRefNo", typeof(int));
    
            var otherSearchTextParameter = otherSearchText != null ?
                new ObjectParameter("OtherSearchText", otherSearchText) :
                new ObjectParameter("OtherSearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_TA_SearchGlobalTenderCount_Result>("Proc_TA_SearchGlobalTenderCount", searchTypeParameter, searchTextParameter, countryIdsParameter, productIdsParameter, agencyIdsParameter, tenderTypeParameter, subDateFromParameter, subDateToParameter, opDateFromParameter, opDateToParameter, ourRefNoParameter, otherSearchTextParameter);
        }
    
        public virtual ObjectResult<Proc_TA_SearchGlobalTenderList_Result> Proc_TA_SearchGlobalTenderList(Nullable<int> searchType, string searchText, string countryIds, Nullable<int> tenderStatusFlag, Nullable<int> start, Nullable<int> limit, string productIds, string agencyIds, Nullable<int> tenderType, Nullable<System.DateTime> subDateFrom, Nullable<System.DateTime> subDateTo, Nullable<System.DateTime> opDateFrom, Nullable<System.DateTime> opDateTo, Nullable<int> ourRefNo, string otherSearchText)
        {
            var searchTypeParameter = searchType.HasValue ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var countryIdsParameter = countryIds != null ?
                new ObjectParameter("CountryIds", countryIds) :
                new ObjectParameter("CountryIds", typeof(string));
    
            var tenderStatusFlagParameter = tenderStatusFlag.HasValue ?
                new ObjectParameter("TenderStatusFlag", tenderStatusFlag) :
                new ObjectParameter("TenderStatusFlag", typeof(int));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("Start", start) :
                new ObjectParameter("Start", typeof(int));
    
            var limitParameter = limit.HasValue ?
                new ObjectParameter("Limit", limit) :
                new ObjectParameter("Limit", typeof(int));
    
            var productIdsParameter = productIds != null ?
                new ObjectParameter("ProductIds", productIds) :
                new ObjectParameter("ProductIds", typeof(string));
    
            var agencyIdsParameter = agencyIds != null ?
                new ObjectParameter("AgencyIds", agencyIds) :
                new ObjectParameter("AgencyIds", typeof(string));
    
            var tenderTypeParameter = tenderType.HasValue ?
                new ObjectParameter("TenderType", tenderType) :
                new ObjectParameter("TenderType", typeof(int));
    
            var subDateFromParameter = subDateFrom.HasValue ?
                new ObjectParameter("SubDateFrom", subDateFrom) :
                new ObjectParameter("SubDateFrom", typeof(System.DateTime));
    
            var subDateToParameter = subDateTo.HasValue ?
                new ObjectParameter("SubDateTo", subDateTo) :
                new ObjectParameter("SubDateTo", typeof(System.DateTime));
    
            var opDateFromParameter = opDateFrom.HasValue ?
                new ObjectParameter("OpDateFrom", opDateFrom) :
                new ObjectParameter("OpDateFrom", typeof(System.DateTime));
    
            var opDateToParameter = opDateTo.HasValue ?
                new ObjectParameter("OpDateTo", opDateTo) :
                new ObjectParameter("OpDateTo", typeof(System.DateTime));
    
            var ourRefNoParameter = ourRefNo.HasValue ?
                new ObjectParameter("OurRefNo", ourRefNo) :
                new ObjectParameter("OurRefNo", typeof(int));
    
            var otherSearchTextParameter = otherSearchText != null ?
                new ObjectParameter("OtherSearchText", otherSearchText) :
                new ObjectParameter("OtherSearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_TA_SearchGlobalTenderList_Result>("Proc_TA_SearchGlobalTenderList", searchTypeParameter, searchTextParameter, countryIdsParameter, tenderStatusFlagParameter, startParameter, limitParameter, productIdsParameter, agencyIdsParameter, tenderTypeParameter, subDateFromParameter, subDateToParameter, opDateFromParameter, opDateToParameter, ourRefNoParameter, otherSearchTextParameter);
        }
    }
}
